import matplotlib.pyplot as plt
plt.plot([1,2,3,4,5,6,7,8,9], [2,3,4,5,6,7,8,9,10], 'g^') #x values, y values 
plt.ylabel("y axis")

#bs - blue squares 
#ro - red circles 
#r-- - red dashes 
#g^ - green triangles 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

import matplotlib.pyplot as plt
estimates = [1,2,3,4,5,6,1,2,6,5,4,8,9,2,4,5,8,4,3,5,4,8,1,3,4,7,8,9,6,1,14,5,2,3,6,5,8,7,4,2,3,6,9,9,9,9,9,9,9,9,9,9,4,1,2,5,4,8,7,8,6,2,4,8,8,5,6,8,78,5]
plt.plot(estimates)
#what this does is - the data that is there in estimates is taken as y values (by default) as no other list is specified for x values
#for each y value, x value is incremented on its own starting from 0
#the points that the graph will be as follows 
#(0,1), (1,2), (2,3), (3,4)
#here x value is incremented one by one starting from 0 
#y values are taken from estimates 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

import matplotlib.pyplot as plt
import statistics 
estimates = [1,2,3,4,5,6,1,2,6,5,4,8,9,2,4,5,8,4,3,5,4,8,1,3,4,7,8,9,6,1,14,5,2,3,6,5,8,7,4,2,3,6,9,9,9,9,9,9,9,9,9,9,4,1,2,5,4,8,7,8,6,2,4,8,8,5,6,8,78,5]
estimates.sort()
tv = int(0.1*len(estimates))
estimates = estimates[tv:]
estimates = estimates[:len(estimates)-tv]
x=[]
for i in range(len(estimates)):
    x.append(1)
plt.plot(estimates,x, 'r--')
plt.plot(statistics.mean(estimates), [1], 'g^')
plt.plot(statistics.median(estimates), [1], 'bs')
plt.plot([6],[1],'rs')
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
